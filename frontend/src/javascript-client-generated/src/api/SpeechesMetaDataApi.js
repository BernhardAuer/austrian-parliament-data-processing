/**
 * WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LegislatureMeetingsListDto from '../model/LegislatureMeetingsListDto';
import SpeechesMetaData from '../model/SpeechesMetaData';
import TopicSearchResultDto from '../model/TopicSearchResultDto';
import TypeOfSpeechCountDto from '../model/TypeOfSpeechCountDto';

/**
* SpeechesMetaData service.
* @module api/SpeechesMetaDataApi
* @version 1.0
*/
export default class SpeechesMetaDataApi {

    /**
    * Constructs a new SpeechesMetaDataApi. 
    * @alias module:api/SpeechesMetaDataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiSpeechesMetaDataGet operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SpeechesMetaData>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SpeechesMetaData>}
     */
    apiSpeechesMetaDataGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [SpeechesMetaData];
      return this.apiClient.callApi(
        '/api/SpeechesMetaData', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataGetLegislaturesAndMeetingNumbersGet operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataGetLegislaturesAndMeetingNumbersGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/LegislatureMeetingsListDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataGetLegislaturesAndMeetingNumbersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/LegislatureMeetingsListDto>}
     */
    apiSpeechesMetaDataGetLegislaturesAndMeetingNumbersGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [LegislatureMeetingsListDto];
      return this.apiClient.callApi(
        '/api/SpeechesMetaData/getLegislaturesAndMeetingNumbers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataGetTypeOfSpeechesCountListGet operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataGetTypeOfSpeechesCountListGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TypeOfSpeechCountDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [politicalParty] 
     * @param {String} [legislature] 
     * @param {Number} [meetingNumber] 
     * @param {String} [topic] 
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataGetTypeOfSpeechesCountListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TypeOfSpeechCountDto>}
     */
    apiSpeechesMetaDataGetTypeOfSpeechesCountListGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PoliticalParty': this.apiClient.buildCollectionParam(opts['politicalParty'], 'multi'),
        'Legislature': opts['legislature'],
        'MeetingNumber': opts['meetingNumber'],
        'Topic': opts['topic']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TypeOfSpeechCountDto];
      return this.apiClient.callApi(
        '/api/SpeechesMetaData/getTypeOfSpeechesCountList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataIdDelete operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiSpeechesMetaDataIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiSpeechesMetaDataIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/SpeechesMetaData/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataIdGet operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpeechesMetaData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpeechesMetaData}
     */
    apiSpeechesMetaDataIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiSpeechesMetaDataIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = SpeechesMetaData;
      return this.apiClient.callApi(
        '/api/SpeechesMetaData/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataIdPut operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/SpeechesMetaData} [speechesMetaData] 
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiSpeechesMetaDataIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['speechesMetaData'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiSpeechesMetaDataIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/SpeechesMetaData/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataPost operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/SpeechesMetaData} [speechesMetaData] 
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiSpeechesMetaDataPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['speechesMetaData'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/SpeechesMetaData', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSpeechesMetaDataSearchTopicsGet operation.
     * @callback module:api/SpeechesMetaDataApi~apiSpeechesMetaDataSearchTopicsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TopicSearchResultDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [searchTerm] 
     * @param {String} [legislature] 
     * @param {Number} [meetingNumber] 
     * @param {module:api/SpeechesMetaDataApi~apiSpeechesMetaDataSearchTopicsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TopicSearchResultDto>}
     */
    apiSpeechesMetaDataSearchTopicsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'searchTerm': opts['searchTerm'],
        'legislature': opts['legislature'],
        'meetingNumber': opts['meetingNumber']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TopicSearchResultDto];
      return this.apiClient.callApi(
        '/api/SpeechesMetaData/searchTopics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
